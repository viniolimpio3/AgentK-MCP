@echo off
REM Script para testar a aplica√ß√£o AgentK com Docker
REM Autor: Vin√≠cius

echo üöÄ AgentK Docker Setup Script
echo ================================

REM Verificar se o Docker est√° instalado
docker --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Docker n√£o encontrado! Por favor, instale o Docker primeiro.
    pause
    exit /b 1
)

REM Verificar se o Docker Compose est√° instalado
docker-compose --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Docker Compose n√£o encontrado! Por favor, instale o Docker Compose primeiro.
    pause
    exit /b 1
)

REM Verificar se o arquivo .env existe
if not exist .env (
    echo ‚ö†Ô∏è Arquivo .env n√£o encontrado. Copiando .env.example...
    copy .env.example .env
    echo ‚úÖ Arquivo .env criado! Por favor, configure sua OPENAI_API_KEY em .env
    echo üìù Abrindo .env para edi√ß√£o...
    notepad .env
    echo Pressione qualquer tecla quando terminar de configurar o .env...
    pause >nul
)

REM Verificar se OPENAI_API_KEY est√° configurada
findstr /C:"OPENAI_API_KEY=sk-" .env >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ö†Ô∏è OPENAI_API_KEY n√£o parece estar configurada corretamente no .env
    echo Por favor, configure uma chave v√°lida da OpenAI
    pause
    exit /b 1
)

echo ‚úÖ Pr√©-requisitos verificados!
echo.

REM Menu de op√ß√µes
echo Escolha uma op√ß√£o:
echo 1) Construir e executar (primeira vez)
echo 2) Executar servi√ßos existentes
echo 3) Parar servi√ßos
echo 4) Ver logs
echo 5) Rebuild completo
echo 6) Limpeza completa

set /p option="Op√ß√£o [1-6]: "

if "%option%"=="1" (
    echo üî® Construindo e executando pela primeira vez...
    docker-compose up --build -d
    goto :success
)

if "%option%"=="2" (
    echo ‚ñ∂Ô∏è Executando servi√ßos...
    docker-compose up -d
    goto :success
)

if "%option%"=="3" (
    echo ‚èπÔ∏è Parando servi√ßos...
    docker-compose down
    goto :end
)

if "%option%"=="4" (
    echo üìã Mostrando logs...
    docker-compose logs -f
    goto :end
)

if "%option%"=="5" (
    echo üîÑ Rebuild completo...
    docker-compose down
    docker-compose build --no-cache
    docker-compose up -d
    goto :success
)

if "%option%"=="6" (
    echo üßπ Limpeza completa...
    docker-compose down -v
    docker system prune -f
    docker volume prune -f
    goto :end
)

echo ‚ùå Op√ß√£o inv√°lida!
pause
exit /b 1

:success
echo.
echo üéâ Servi√ßos iniciados!
echo ================================
echo üì± Streamlit Client: http://localhost:8501
echo üîß MCP Server: http://localhost:3333/mcp
echo.
echo Para ver logs em tempo real:
echo docker-compose logs -f
echo.
echo Para parar os servi√ßos:
echo docker-compose down

:end
echo.
pause